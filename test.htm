<script src= "https://d3js.org/d3.v6.min.js" ></script>

<svg id="stackedbar" height=800 width=800>
<!-- Populating dynamically -->
</svg>

<script>
let svg = d3.select("svg#stackedbar");
const widthBar = svg.attr("width");
const heightBar = svg.attr("height");
const margins = { "top": 10, "right": 10, "bottom": 10, "left": 10 };
const chartWidthBar = widthBar - margins.left - margins.right;
const chartHeightBar = heightBar - margins.top - margins.bottom;

var race = [" % White ", " % Asian ", " % Latino ", " % Black ", " % Multi ", " % Undeclared "]
d3.csv("group_company_final.csv", d3.autoType)
  .then((data) => {

    console.log(data)
    data = data.filter( (d) => {return d['Date'] === "Jan 2018"});
    console.log(data)

    stackdata = race.map(function(c) {
      console.log(c)
    return data.map(function(d,i) {
      console.log(d)
      return {x:i, y:d[c]} })
    })
    console.log(data)
    console.log(stackdata)
  // var svg = d3.select("body")
  //   .append("svg")
  //   .attr("width", 250)
  //   .attr("height", 250)
  // Set up stack method
  var stack = d3.stack()
  // Data, stacked
  stack(stackdata)
  // gold silver colors
  var colors = ["rgb(65,187,197)", "rgb(140,2,80)", "rgb(192,225,92)", "rgb(161,148,220)", "rgb(92,240,112)", "rgb(7,92,98)"]
  // Add a group for each row of data
  var groups = svg.selectAll("g")
    .data(stackdata)
    .enter()
    .append("g")
    .style("fill", function(d, i) { return colors[i]})
    .attr("transform","translate("+(margins.left-10)+","+margins.top+")")

  // Add a rect for each data value
  var rects = groups.selectAll("rect")
    .data(function(d) {return d})
    .enter()
    .append("rect")
    .attr("x", function(d, i) {return i*28})
    .attr("y", function(d) {return d.y0})
    .attr("height", function(d) {return d.y})
    .attr("width", 24)
    .attr("transform","translate("+(margins.left-10)+","+margins.top+")")

  });

</script>
